cmake_minimum_required(VERSION 3.8)
project(fsu)

# Default to C++14
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(std_msgs REQUIRED)
find_package(sensor_msgs REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(nav_msgs REQUIRED)

add_executable(lidar_remapping_node src/lidar_remapping_node.cpp)
target_include_directories(lidar_remapping_node PUBLIC
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
  $<INSTALL_INTERFACE:include>)
ament_target_dependencies(
  lidar_remapping_node
  "std_msgs"
  "rclcpp"
  "sensor_msgs"
  "geometry_msgs")
install(TARGETS lidar_remapping_node
  DESTINATION lib/${PROJECT_NAME})

add_executable(imu_remapping_node src/imu_remapping_node.cpp)
target_include_directories(imu_remapping_node PUBLIC
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
    $<INSTALL_INTERFACE:include>)
ament_target_dependencies(
    imu_remapping_node
    "std_msgs"
    "rclcpp"
    "sensor_msgs"
    "geometry_msgs")
install(TARGETS imu_remapping_node
    DESTINATION lib/${PROJECT_NAME})

add_executable(odom_remapping_node src/odom_remapping_node.cpp)
target_include_directories(odom_remapping_node PUBLIC
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
    $<INSTALL_INTERFACE:include>)
ament_target_dependencies(
    odom_remapping_node
    "std_msgs"
    "rclcpp"
    "nav_msgs"
    "geometry_msgs")
install(TARGETS odom_remapping_node
    DESTINATION lib/${PROJECT_NAME})
    

install(
  DIRECTORY launch
  DESTINATION share/${PROJECT_NAME}
)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # uncomment the line when a copyright and license is not present in all source files
  #set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # uncomment the line when this package is not in a git repo
  #set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
